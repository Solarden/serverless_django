service: serverless-django

plugins:
  - serverless-python-requirements
  - serverless-wsgi

custom:
  wsgi:
    app: serverless_django.wsgi.application
    packRequirements: false
  pythonRequirements:
    dockerizePip: non-linux
  DB_NAME: ${file(./secrets.json):DB_NAME}
  DB_USERNAME: ${file(./secrets.json):DB_USERNAME}
  DB_PASSWORD: ${file(./secrets.json):DB_PASSWORD}
  DB_PORT: !GetAtt RDSInstance.Endpoint.Port
  PROXY_ENDPOINT: !GetAtt RDSProxy.Endpoint
  PROXY_NAME: example-proxy-name-${opt:stage, 'dev'}
  VPC_CIDR: 10

provider:
  name: aws
  runtime: python3.9
  stage: dev
  region: eu-central-1
  memorySize: 256
  vpc:
    securityGroupIds:
      - !Ref LambdaSecurityGroup
    subnetIds:
      - !Ref SubnetAPrivate
      - !Ref SubnetBPrivate
  environment:
    NODE_ENV: ${opt:stage, 'dev'}
    DB_NAME: ${self:custom.DB_NAME}
    DB_USER: ${self:custom.DB_USERNAME}
    DB_PASS: ${self:custom.DB_PASSWORD}
    DB_PORT: ${self:custom.DB_PORT}
    DB_HOST: ${self:custom.PROXY_ENDPOINT}

functions:
  app:
    handler: wsgi_handler.handler
    events:
      - http: ANY /
      - http: 'ANY /{proxy+}'

resources:
  - ${file(resources/VpcResources.yml)}
  - ${file(resources/RoutingResources.yml)}
  - ${file(resources/RdsResources.yml)}
  - ${file(resources/RdsProxyResources.yml)}
